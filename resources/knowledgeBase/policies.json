{
    "authentication-basic": "Authenticate with the backend service using Basic authentication. Use in the inbound section at API scope.",
    "authentication-certificate": "Authenticate with the backend service using a client certificate. Use in the inbound section at API scope.",
    "cache-lookup": "Perform cache lookup and return a valid cached response when available. Appropriately respond to cache validation requests from callers. Use anywhere in the inbound section at Workspace, Product, API, or Operation scopes.",
    "cache-lookup-value": "Perform cache lookup and returned value under the key, if available, or default. If value is not present and no default is specified, variable will not be set. Use at any scope in any section except <backend>.",
    "cache-remove-value": "Remove value from cache under the key. Use at any scope in any section except <backend>.",
    "cache-store": "Cache responses according to the specified cache configuration. Use anywhere in the outbound section at Workspace, Product, API, or Operation scopes.",
    "cache-store-value": "Store value in cache under a key for duration. Use at any scope in any section except <backend>.",
    "check-header": "Check header and return specified HTTP status code if it doesn't exist or match expected value. Works for both response and request headers – policy can be applied in inbound or outbound sections at any scope.",
    "choose": "Conditionally apply policy statements based on the results of the evaluation of Boolean expressions. Use at any scope in the inbound and outbound sections.",
    "cors": "CORS stands for cross-origin resource sharing. Add CORS support to an operation or an API to allow cross-domain calls from browser-based clients. Use in the inbound section only.",
    "cross-domain": "Make the API accessible from Adobe Flash and Microsoft Silverlight browser-based clients. Use in the inbound section at Global scope.",
    "get-authorization-context": "Get authorization context for the specified AuthorizationProvider and Authorization and bind into a variable.",
    "find-and-replace": "Find a request or response substring and replace it with a different substring. Use in the inbound and outbound sections at any scope.",
    "forward-request": "Forward request to the backend service using information in the context and receive a response, waiting no longer then specified timeout value. Use at any scope in the backend section.",
    "ip-filter": "Allow calls only from specific IP addresses and/or address ranges. Forbid calls from specific IP addresses and/or address ranges. Use in the inbound section at any scope.",
    "jsonp": "Add support for JSONP to an operation or an API to allow cross-domain calls from JavaScript browser-based clients. Use in the outbound section only.",
    "json-to-xml": "Convert request or response body from JSON to XML. Use in the inbound or outbound sections at API or Operation scopes.",
    "limit-concurrency": "Limit how many calls may be processed in parallel for the duration of this policy's body.",
    "log-to-eventhub": "Send custom messages to Event Hub. Use at any scope in the inbound or outbound sections.",
    "mock-response": "Mock response based on operation responses samples/schemas. Use at any scope in the inbound or outbound sections.",
    "quota": "Enforce a renewable or lifetime call volume and/or bandwidth quota per subscription. Use in the inbound section at Product scope.",
    "quota-by-key": "Enforce a renewable or lifetime call volume and/or bandwidth quota per calculated key. Use in the inbound section at any scope.",
    "rate-limit": "Arrest usage spikes by limiting calls and/or bandwidth consumption rate per subscription. Use in the inbound section at Workspace, Product, API, or Operation scopes.",
    "rate-limit-by-key": "Arrest usage spikes by limiting calls and/or bandwidth consumption rate per calculated key. Use in the inbound section at any scope.",
    "redirect-content-urls": "Use in the outbound section to re-write response body links and Location header values making them point to the proxy. Use in the inbound section for an opposite effect. Apply at API or Operation scopes.",
    "retry": "Retry execution of the enclosed policy statements, if and until the condition is met. Execution will repeat at the specified time interval, up to the specified count.",
    "return-response": "Abort pipeline execution and return the specified response directly to the caller. Use at any scope in the inbound and outbound sections.",
    "rewrite-uri": "Convert request URL from its public form to the form expected by the web service. Use anywhere in the inbound section at Operation scope only.",
    "send-one-way-request": "Send provided request to the specified URL, without waiting for response. Use at any scope in the inbound and outbound sections.",
    "send-request": "Send provided request to the specified URL, waiting no longer then set timeout value. Use at any scope in the inbound and outbound sections.",
    "set-backend-service": "Change backend service where the incoming calls will be directed. Use in the inbound section only at any scope.",
    "set-body": "Set message body to a specific string value. The policy has no effect on the Content-Type header value. Use at any scope in the inbound or outbound sections.",
    "set-header": "Add a new header, change the value of an existing header or remove a header. Works for both response and request headers – policy can be applied in inbound or outbound sections at any scope.",
    "set-method": "Change HTTP method to the specified value",
    "set-query-parameter": "Add a new query string parameter, change the value of an existing parameter or remove a parameter. Can be applied in the inbound section at any scope.",
    "set-status": "Change HTTP status code to the specified value. Use at any scope in the outbound sections.",
    "set-variable": "Persist a value in a named context variable for later access from expressions. Use at any scope in the inbound and outbound sections.",
    "trace": "Output information into trace logs (if request is executed with tracing enabled) or diagnsotic logs (if diagnostic is enabled).",
    "validate-jwt": "Check and validate a JWT in a header or query parameter. Use in the inbound section at any scope.",
    "wait": "Wait for all or any of the send request policies to complete before proceeding. Use at any scope in the inbound and outbound sections.",
    "xml-to-json": "Convert request or response body from XML to either \"JSON friendly\" or \"XML faithful\" form of JSON. Use in the inbound or outbound sections at API or Operation scopes.",
    "xsl-transform": "Transform request or response body using XSLTransform. Use in the inbound, outbound and on-error sections at any scope.",
    "proxy": "Specify http proxy location and credentials.",
    "invoke-request": "Redirect incoming request to a different gateway URI restarting request processing.",
    "authentication-token": "Authenticate backend with OAuth2 token. Call Token Store to obtain OAuth2 token or use Managed Indentity Service (MSI). This can be used to access OAuth protected services or SAAS providers.",
    "authentication-token-store": "Authenticate backend with OAuth2 token. Call Token Store to obtain OAuth2 token using managed identity. This can be used to access OAuth protected services or SAAS providers.",
    "authentication-managed-identity": "Authenticate backend with managed identity OAuth2 token. This can be used to access OAuth protected services.",
    "publish-to-dapr": "Publish messages through dapr's pub-sub feature. Other apps on dapr runtime can consume these messages if they are subscribed to the specific topic.",
    "invoke-dapr-binding": "Use API Management as a dapr output binding app",
    "set-request-metric-dimension-value": "Set custom dimension value for first party request mdm metric",
    "validate-content": "Validate content against OpenApi schema",
    "validate-parameters": "Validate parameters against OpenApi schema",
    "validate-headers": "Validate response headers against OpenApi schema",
    "validate-status-code": "Validate response status code against OpenApi schema",
    "emit-metric": "Emits custom metric to Application Insights",
    "validate-client-certificate": "Validate client certificate.",
    "validate-graphql-request": "Validate GraphQL request",
    "validate-odata-request": "Validate OData request",
    "include-fragment": "Include policy fragment.",
    "validate-azure-ad-token": "Check and validate a JWT issued by Azure AD in a header or query parameter. Use in the inbound section at any scope.",
    "publish-event": "Publish Event",
    "http-data-source": "Synthetic GraphQL Resolver that resolves values with HTTP requests",
    "cosmosdb-data-source": "Cosmos Data Source Resolvers",
    "sql-data-source": "Synthetic GraphQL Resolver that resolves values with Azure SQL requests",
    "graphql-data-source": "Synthetic GraphQL Resolver that resolves values with subsequent GraphQL requests",
    "set-url": "Change URL to the specified value",
    "lm-token-limit": "Arrest usage spikes by limiting language model tokens per calculated key. Use in the inbound section at any scope.",
    "azure-openai-token-limit": "Arrest usage spikes by limiting Azure OpenAI language model tokens per calculated key. Use in the inbound section at any scope.",
    "azure-openai-emit-token-metric": "Track usage of Azure OpenAI language model tokens. Use in the inbound section at any scope.",
    "azure-openai-semantic-cache-lookup": "Get cached responses of OpenAI requests, based on vector proximity of the prompt to previous requests, and a given score threshold.",
    "azure-openai-semantic-cache-store": "Caches responses according to the specified azure OpenAI cache configuration. Use anywhere in the outbound section at Workspace, Product, API, or Operation scopes.",
    "llm-token-limit": "Arrest usage spikes by limiting language model tokens per calculated key. Use in the inbound section at any scope.",
    "llm-content-safety": "Block content that gets flagged in Azure Content Safety or contains blocklisted terms. Use in the inbound section at any scope.",
    "llm-emit-token-metric": "Track usage of language model tokens. Use in the inbound section at any scope.",
    "llm-semantic-cache-lookup": "Get cached responses of language model requests, based on vector proximity of the prompt to previous requests, and a given score threshold.",
    "llm-semantic-cache-store": "Caches responses according to the specified cache configuration. Use anywhere in the outbound section at Workspace, Product, API, or Operation scopes."
}