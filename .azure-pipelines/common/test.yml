steps:
- script: |
    sudo cp .azure-pipelines/linux/xvfb.init /etc/init.d/xvfb
    sudo chmod +x /etc/init.d/xvfb
    sudo update-rc.d xvfb defaults
    sudo service xvfb start
  displayName: 'Start X Virtual Frame Buffer'
  condition: eq(variables['Agent.OS'], 'Linux')

- task: UsePythonVersion@0
  condition: in(variables['agent.os'], 'Windows_NT')
  displayName: 'Use Python on Windows' # specific version for Windows: https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md
  inputs:
    versionSpec: 3.9.9

- task: UsePythonVersion@0
  condition: in(variables['agent.os'], 'Darwin', 'Linux')
  displayName: 'Use Python 3.9.10' # specific version for macOS: https://github.com/actions/virtual-environments/blob/main/images/macos/macos-11-Readme.md
  inputs:
    versionSpec: 3.9.10

- task: Npm@1
  displayName: 'Test'
  inputs:
    command: custom
    customCommand: test
  env:
    SERVICE_PRINCIPAL_CLIENT_ID: $(SERVICE_PRINCIPAL_CLIENT_ID)
    SERVICE_PRINCIPAL_SECRET: $(SERVICE_PRINCIPAL_SECRET)
    SERVICE_PRINCIPAL_DOMAIN: $(SERVICE_PRINCIPAL_DOMAIN)
    DISPLAY: :10 # Only necessary for linux tests

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFiles: '*-results.xml'
    testRunTitle: '$(Agent.OS)'
  condition: succeededOrFailed()
